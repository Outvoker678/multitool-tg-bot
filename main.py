import yt_dlp, os
import sqlite3
import asyncio, logging
from tgtoken import TOKEN
from aiogram import Bot, Dispatcher
from aiogram.filters import CommandStart
from aiogram.types import Message, FSInputFile, ReplyKeyboardMarkup, KeyboardButton
from aiogram import F
import subprocess

bot = Bot(TOKEN)
dp = Dispatcher()

class Dbfunk():
    def __init__(self):
        self.db = sqlite3.connect('userf.db')
        self.cursor = self.db.cursor()
        self.cursor.execute("""
            CREATE TABLE IF NOT EXISTS TGBOTDB (
            username TEXT,
            tag TEXT)""")
        self.db.commit()
        self.db.close()

    def add(self, user, frend):
        self.db = sqlite3.connect('userf.db')
        self.cursor = self.db.cursor()
        self.cursor.execute(f"INSERT INTO TGBOTDB VALUES ('{user}', '{frend}')")
        self.db.commit()
        self.db.close()
    
dbobjeck = Dbfunk()

maink = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞ üòä"), KeyboardButton(text="–£–¥–∞–ª–∏—Ç—å –¥—Ä—É–≥–∞ üò¢")]], resize_keyboard=True, input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é...")

async def ttdownl(text, messageid, date, message):  # –°–∫–∞—á–∞—Ç—å TikTok-–≤–∏–¥–µ–æ
    ydl_opts = {
        'outtmpl': f'{messageid}_{date}.%(ext)s',
        'format': 'mp4',
    }
    def downs(url, ydl_opts):
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            ydl.download([url])
    await asyncio.to_thread(downs, text, ydl_opts)
    await message.answer_video(video=FSInputFile(f"{messageid}_{date}.mp4"))
    os.remove(f"{messageid}_{date}.mp4")

async def spdownl(text, messageid, date_str, message: Message):  # –°–∫–∞—á–∞—Ç—å Spotify-—Ç—Ä–µ–∫
    folder = f"downloads_{messageid}_{date_str}"
    os.makedirs(folder, exist_ok=True)

    def sync_download():
        command = ["spotdl", text, "--output", folder]
        subprocess.run(command)

    await asyncio.to_thread(sync_download)

    filesp = os.listdir(folder)
    for files in filesp:
        await message.answer_audio(audio=FSInputFile(os.path.join(folder, files)))
        os.remove(os.path.join(folder, files))
    os.rmdir(folder)

@dp.message(F.text == "–î–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∞ üòä")
async def friendo_repost(message: Message):
    await message.answer("–ü–µ—Ä–µ—à–ª–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –≤–∞—à–µ–≥–æ –¥—Ä—É–≥–∞.")

@dp.message(F.forward_from)
async def handle_forwarded_message(message: Message):
    forwarded_user_id = message.forward_from.id
    sender_user_id = message.from_user.id
    
    dbobjeck.add(forwarded_user_id, sender_user_id)
    
    await message.answer(
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ: {forwarded_user_id}\n"
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø–µ—Ä–µ—Å–ª–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {sender_user_id}"
    )

@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç!\n\n"
        "–Ø ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç-–∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç. –í –±—É–¥—É—â–µ–º —è –Ω–∞—É—á—É—Å—å –¥–µ–ª–∞—Ç—å –º–Ω–æ–≥–æ–µ, "
        "–Ω–æ —É–∂–µ —Å–µ–π—á–∞—Å —É–º–µ—é:\n"
        "‚Ä¢ —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ –∏–∑ TikTok –±–µ–∑ –≤–æ–¥—è–Ω—ã—Ö –∑–Ω–∞–∫–æ–≤\n"
        "‚Ä¢ —Å–∫–∞—á–∏–≤–∞—Ç—å –º—É–∑—ã–∫—É –∏–∑ Spotify\n"
        "‚Ä¢ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–≤–æ–∏–º –¥—Ä—É–∑—å—è–º\n\n"
        "üìé –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ TikTok-–≤–∏–¥–µ–æ –∏–ª–∏ Spotify-—Ç—Ä–µ–∫, "
        "–∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è!\n", reply_markup=maink)

@dp.message(F.text)
async def downme(message: Message):
    date_str = message.date.strftime("%Y%m%d_%H%M%S")  # –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—É –≤ —Å—Ç—Ä–æ–∫—É
    if "tiktok.com" in message.text:
        await message.answer("üîó –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –°–µ–π—á–∞—Å —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ...")
        await ttdownl(message.text, message.message_id, date_str, message)
    elif "open.spotify.com" in message.text:
        await message.answer("üîó –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞! –°–µ–π—á–∞—Å —Å–∫–∞—á–∞—é —Ç—Ä–µ–∫...")
        await spdownl(message.text, message.message_id, date_str, message)
    else:
        await message.answer("‚ùóÔ∏è–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ TikTok –∏–ª–∏ Spotify.")

async def main():
    logging.basicConfig(level=logging.INFO)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
